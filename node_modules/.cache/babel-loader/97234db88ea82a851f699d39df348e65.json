{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Phoenix\\\\Documents\\\\RampFEI_bugs\\\\src\\\\components\\\\InputSelect\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport Downshift from \"downshift\";\nimport { useCallback, useState } from \"react\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function InputSelect(_ref) {\n  _s();\n\n  let {\n    label,\n    defaultValue,\n    onChange: consumerOnChange,\n    items,\n    parseItem,\n    isLoading,\n    loadingLabel\n  } = _ref;\n  const [selectedValue, setSelectedValue] = useState(defaultValue !== null && defaultValue !== void 0 ? defaultValue : null);\n  const [dropdownPosition, setDropdownPosition] = useState({\n    top: 0,\n    left: 0\n  });\n  const onChange = useCallback(selectedItem => {\n    if (selectedItem === null) {\n      return;\n    }\n\n    consumerOnChange(selectedItem);\n    setSelectedValue(selectedItem);\n  }, [consumerOnChange]);\n  return /*#__PURE__*/_jsxDEV(Downshift, {\n    id: \"RampSelect\",\n    onChange: onChange,\n    selectedItem: selectedValue,\n    itemToString: item => item ? parseItem(item).label : \"\",\n    children: _ref2 => {\n      let {\n        getItemProps,\n        getLabelProps,\n        getMenuProps,\n        isOpen,\n        highlightedIndex,\n        selectedItem,\n        getToggleButtonProps,\n        inputValue\n      } = _ref2;\n      const toggleProps = getToggleButtonProps();\n      const parsedSelectedItem = selectedItem === null ? null : parseItem(selectedItem);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampInputSelect--root\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"RampText--s RampText--hushed\",\n          ...getLabelProps(),\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RampBreak--xs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RampInputSelect--input\",\n          onClick: event => {\n            setDropdownPosition(getDropdownPosition(event.target));\n            toggleProps.onClick(event);\n          },\n          children: inputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames(\"RampInputSelect--dropdown-container\", {\n            \"RampInputSelect--dropdown-container-opened\": isOpen\n          }),\n          ...getMenuProps(),\n          // Added position set to absolute so that on scroll dropdown will be positioned correctly\n          style: {\n            position: 'absolute',\n            top: dropdownPosition.top,\n            left: dropdownPosition.left\n          },\n          children: renderItems()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this);\n\n      function renderItems() {\n        if (!isOpen) {\n          return null;\n        }\n\n        if (isLoading) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"RampInputSelect--dropdown-item\",\n            children: [loadingLabel, \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 20\n          }, this);\n        }\n\n        if (items.length === 0) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"RampInputSelect--dropdown-item\",\n            children: \"No items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 20\n          }, this);\n        }\n\n        return items.map((item, index) => {\n          const parsedItem = parseItem(item);\n          return /*#__PURE__*/_jsxDEV(\"div\", { ...getItemProps({\n              key: parsedItem.value,\n              index,\n              item,\n              className: classNames(\"RampInputSelect--dropdown-item\", {\n                \"RampInputSelect--dropdown-item-highlighted\": highlightedIndex === index,\n                \"RampInputSelect--dropdown-item-selected\": (parsedSelectedItem === null || parsedSelectedItem === void 0 ? void 0 : parsedSelectedItem.value) === parsedItem.value\n              })\n            }),\n            children: parsedItem.label\n          }, parsedItem.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this);\n        });\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InputSelect, \"A8/jCY4wmOfZ0OM0G4SMaxEnjfs=\");\n\n_c = InputSelect;\n\nconst getDropdownPosition = target => {\n  if (target instanceof Element) {\n    const {\n      top,\n      left\n    } = target.getBoundingClientRect();\n    const {\n      scrollY\n    } = window;\n    return {\n      top: scrollY + top + 63,\n      left\n    };\n  }\n\n  return {\n    top: 0,\n    left: 0\n  };\n}; //Added event listener to run getDropdownPosition function on window resize\n\n\nwindow.addEventListener(\"resize\", () => {\n  const dropdownContainer = document.querySelector(\".RampInputSelect--dropdown-container\");\n\n  if (dropdownContainer) {\n    const target = dropdownContainer.previousSibling;\n\n    if (target instanceof Element) {\n      const dropdownPosition = getDropdownPosition(target);\n      dropdownContainer.style.top = `${dropdownPosition.top}px`;\n      dropdownContainer.style.left = `${dropdownPosition.left}px`;\n    }\n  }\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"InputSelect\");","map":{"version":3,"names":["Downshift","useCallback","useState","classNames","InputSelect","label","defaultValue","onChange","consumerOnChange","items","parseItem","isLoading","loadingLabel","selectedValue","setSelectedValue","dropdownPosition","setDropdownPosition","top","left","selectedItem","item","getItemProps","getLabelProps","getMenuProps","isOpen","highlightedIndex","getToggleButtonProps","inputValue","toggleProps","parsedSelectedItem","event","getDropdownPosition","target","onClick","position","renderItems","length","map","index","parsedItem","key","value","className","Element","getBoundingClientRect","scrollY","window","addEventListener","dropdownContainer","document","querySelector","previousSibling","style"],"sources":["C:/Users/Phoenix/Documents/RampFEI_bugs/src/components/InputSelect/index.tsx"],"sourcesContent":["import Downshift from \"downshift\"\r\nimport { useCallback, useState } from \"react\"\r\nimport classNames from \"classnames\"\r\nimport { DropdownPosition, GetDropdownPositionFn, InputSelectOnChange, InputSelectProps } from \"./types\"\r\n\r\nexport function InputSelect<TItem>({\r\n  label,\r\n  defaultValue,\r\n  onChange: consumerOnChange,\r\n  items,\r\n  parseItem,\r\n  isLoading,\r\n  loadingLabel,\r\n}: InputSelectProps<TItem>) {\r\n  const [selectedValue, setSelectedValue] = useState<TItem | null>(defaultValue ?? null)\r\n  const [dropdownPosition, setDropdownPosition] = useState<DropdownPosition>({\r\n    top: 0,\r\n    left: 0,\r\n  })\r\n\r\n  const onChange = useCallback<InputSelectOnChange<TItem>>(\r\n    (selectedItem) => {\r\n      if (selectedItem === null) {\r\n        return\r\n      }\r\n\r\n      consumerOnChange(selectedItem)\r\n      setSelectedValue(selectedItem)\r\n    },\r\n    [consumerOnChange]\r\n  )\r\n\r\n  return (\r\n    <Downshift<TItem>\r\n      id=\"RampSelect\"\r\n      onChange={onChange}\r\n      selectedItem={selectedValue}\r\n      itemToString={(item) => (item ? parseItem(item).label : \"\")}\r\n    >\r\n      {({\r\n        getItemProps,\r\n        getLabelProps,\r\n        getMenuProps,\r\n        isOpen,\r\n        highlightedIndex,\r\n        selectedItem,\r\n        getToggleButtonProps,\r\n        inputValue,\r\n      }) => {\r\n        const toggleProps = getToggleButtonProps()\r\n        const parsedSelectedItem = selectedItem === null ? null : parseItem(selectedItem)\r\n\r\n        return (\r\n          <div className=\"RampInputSelect--root\">\r\n            <label className=\"RampText--s RampText--hushed\" {...getLabelProps()}>\r\n              {label}\r\n            </label>\r\n            <div className=\"RampBreak--xs\" />\r\n            <div\r\n              className=\"RampInputSelect--input\"\r\n              onClick={(event) => {\r\n                setDropdownPosition(getDropdownPosition(event.target))\r\n                toggleProps.onClick(event)\r\n              }}\r\n            >\r\n              {inputValue}\r\n            </div>\r\n\r\n            <div\r\n              className={classNames(\"RampInputSelect--dropdown-container\", {\r\n                \"RampInputSelect--dropdown-container-opened\": isOpen,\r\n              })}\r\n              {...getMenuProps()}\r\n              // Added position set to absolute so that on scroll dropdown will be positioned correctly\r\n              style={{position: 'absolute', top: dropdownPosition.top, left: dropdownPosition.left }}\r\n            >\r\n              {renderItems()}\r\n            </div>\r\n          </div>\r\n        )\r\n\r\n        function renderItems() {\r\n          if (!isOpen) {\r\n            return null\r\n          }\r\n\r\n          if (isLoading) {\r\n            return <div className=\"RampInputSelect--dropdown-item\">{loadingLabel}...</div>\r\n          }\r\n\r\n          if (items.length === 0) {\r\n            return <div className=\"RampInputSelect--dropdown-item\">No items</div>\r\n          }\r\n\r\n          return items.map((item, index) => {\r\n            const parsedItem = parseItem(item)\r\n            return (\r\n              <div\r\n                key={parsedItem.value}\r\n                {...getItemProps({\r\n                  key: parsedItem.value,\r\n                  index,\r\n                  item,\r\n                  className: classNames(\"RampInputSelect--dropdown-item\", {\r\n                    \"RampInputSelect--dropdown-item-highlighted\": highlightedIndex === index,\r\n                    \"RampInputSelect--dropdown-item-selected\":\r\n                      parsedSelectedItem?.value === parsedItem.value,\r\n                  }),\r\n                })}\r\n              >\r\n                {parsedItem.label}\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      }}\r\n    </Downshift>\r\n  )\r\n}\r\n\r\nconst getDropdownPosition: GetDropdownPositionFn = (target) => {\r\n  if (target instanceof Element) {\r\n    const { top, left } = target.getBoundingClientRect()\r\n    const { scrollY } = window\r\n    return {\r\n      top: scrollY + top + 63,\r\n      left\r\n    }\r\n  }\r\n\r\n  return { top: 0, left: 0 }\r\n}\r\n\r\n//Added event listener to run getDropdownPosition function on window resize\r\nwindow.addEventListener(\"resize\", () => {\r\n  const dropdownContainer = document.querySelector(\".RampInputSelect--dropdown-container\") as HTMLElement | null\r\n  if (dropdownContainer) {\r\n    const target = dropdownContainer.previousSibling\r\n    if (target instanceof Element) {\r\n      const dropdownPosition = getDropdownPosition(target)\r\n      dropdownContainer.style.top = `${dropdownPosition.top}px`\r\n      dropdownContainer.style.left = `${dropdownPosition.left}px`\r\n    }\r\n  }\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}